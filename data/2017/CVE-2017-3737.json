{
	"id": "CVE-2017-3737",
	"vulnerabilities": [
		{
			"content": {
				"id": "CVE-2017-3737",
				"description": "OpenSSL 1.0.2 (starting from version 1.0.2b) introduced an \"error state\" mechanism. The intent was that if a fatal error occurred during a handshake then OpenSSL would move into the error state and would immediately fail if you attempted to continue the handshake. This works as designed for the explicit handshake functions (SSL_do_handshake(), SSL_accept() and SSL_connect()), however due to a bug it does not work correctly if SSL_read() or SSL_write() is called directly. In that scenario, if the handshake fails then a fatal error will be returned in the initial function call. If SSL_read()/SSL_write() is subsequently called by the application for the same SSL object then it will succeed and the data is passed without being decrypted/encrypted directly from the SSL/TLS record layer. In order to exploit this issue an application bug would have to be present that resulted in a call to SSL_read()/SSL_write() being issued after having already received a fatal error. OpenSSL version 1.0.2b-1.0.2m are affected. Fixed in OpenSSL 1.0.2n. OpenSSL 1.1.0 is not affected.",
				"references": [
					{
						"source": "openssl",
						"url": "http://www.oracle.com/technetwork/security-advisory/cpuapr2018-3678067.html"
					},
					{
						"source": "openssl",
						"url": "http://www.oracle.com/technetwork/security-advisory/cpujan2018-3236628.html"
					},
					{
						"source": "openssl",
						"url": "http://www.oracle.com/technetwork/security-advisory/cpujul2018-4258247.html"
					},
					{
						"source": "openssl",
						"url": "http://www.securityfocus.com/bid/102103"
					},
					{
						"source": "openssl",
						"url": "http://www.securitytracker.com/id/1039978"
					},
					{
						"source": "openssl",
						"url": "https://access.redhat.com/errata/RHSA-2018:0998"
					},
					{
						"source": "openssl",
						"url": "https://access.redhat.com/errata/RHSA-2018:2185"
					},
					{
						"source": "openssl",
						"url": "https://access.redhat.com/errata/RHSA-2018:2186"
					},
					{
						"source": "openssl",
						"url": "https://access.redhat.com/errata/RHSA-2018:2187"
					},
					{
						"source": "openssl",
						"url": "https://cert-portal.siemens.com/productcert/pdf/ssa-179516.pdf"
					},
					{
						"source": "openssl",
						"url": "https://github.com/openssl/openssl/commit/898fb884b706aaeb283de4812340bb0bde8476dc"
					},
					{
						"source": "openssl",
						"url": "https://security.FreeBSD.org/advisories/FreeBSD-SA-17:12.openssl.asc"
					},
					{
						"source": "openssl",
						"url": "https://security.gentoo.org/glsa/201712-03"
					},
					{
						"source": "openssl",
						"url": "https://security.netapp.com/advisory/ntap-20171208-0001/"
					},
					{
						"source": "openssl",
						"url": "https://security.netapp.com/advisory/ntap-20180117-0002/"
					},
					{
						"source": "openssl",
						"url": "https://security.netapp.com/advisory/ntap-20180419-0002/"
					},
					{
						"source": "openssl",
						"url": "https://www.debian.org/security/2017/dsa-4065"
					},
					{
						"source": "openssl",
						"url": "https://www.digitalmunition.me/2017/12/cve-2017-3737-openssl-security-bypass-vulnerability/"
					},
					{
						"source": "openssl",
						"url": "https://www.openssl.org/news/secadv/20171207.txt"
					},
					{
						"source": "openssl",
						"url": "https://www.oracle.com/technetwork/security-advisory/cpujul2019-5072835.html"
					},
					{
						"source": "openssl",
						"url": "https://www.tenable.com/security/tns-2017-16"
					}
				]
			}
		}
	],
	"data_source": "mitre-v5"
}
