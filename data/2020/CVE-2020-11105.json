{
	"id": "CVE-2020-11105",
	"vulnerabilities": [
		{
			"content": {
				"id": "CVE-2020-11105",
				"description": "An issue was discovered in USC iLab cereal through 1.3.0. It employs caching of std::shared_ptr values, using the raw pointer address as a unique identifier. This becomes problematic if an std::shared_ptr variable goes out of scope and is freed, and a new std::shared_ptr is allocated at the same address. Serialization fidelity thereby becomes dependent upon memory layout. In short, serialized std::shared_ptr variables cannot always be expected to serialize back into their original values. This can have any number of consequences, depending on the context within which this manifests.",
				"references": [
					{
						"source": "CVE",
						"url": "https://github.com/USCiLab/cereal/issues/636"
					},
					{
						"source": "mitre",
						"url": "https://github.com/USCiLab/cereal/issues/636"
					}
				],
				"modified": "2024-08-04T11:21:14.533Z"
			}
		}
	],
	"data_source": {
		"id": "mitre-v5",
		"raws": [
			"vuls-data-raw-mitre-v5/2020/CVE-2020-11105.json"
		]
	}
}
