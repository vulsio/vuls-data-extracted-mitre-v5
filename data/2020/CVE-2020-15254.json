{
	"id": "CVE-2020-15254",
	"vulnerabilities": [
		{
			"content": {
				"id": "CVE-2020-15254",
				"title": "Undefined Behavior in bounded Crossbeam channel",
				"description": "Crossbeam is a set of tools for concurrent programming. In crossbeam-channel before version 0.4.4, the bounded channel incorrectly assumes that `Vec::from_iter` has allocated capacity that same as the number of iterator elements. `Vec::from_iter` does not actually guarantee that and may allocate extra memory. The destructor of the `bounded` channel reconstructs `Vec` from the raw pointer based on the incorrect assumes described above. This is unsound and causing deallocation with the incorrect capacity when `Vec::from_iter` has allocated different sizes with the number of iterator elements. This has been fixed in crossbeam-channel 0.4.4.",
				"severity": [
					{
						"type": "cvss_v31",
						"source": "GitHub_M",
						"cvss_v31": {
							"vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
							"base_score": 8.1,
							"base_severity": "HIGH",
							"temporal_score": 8.1,
							"temporal_severity": "HIGH",
							"environmental_score": 8.1,
							"environmental_severity": "HIGH"
						}
					}
				],
				"cwe": [
					{
						"source": "GitHub_M",
						"cwe": [
							"CWE-119"
						]
					}
				],
				"references": [
					{
						"source": "GitHub_M",
						"url": "https://github.com/RustSec/advisory-db/pull/425"
					},
					{
						"source": "GitHub_M",
						"url": "https://github.com/crossbeam-rs/crossbeam/issues/539"
					},
					{
						"source": "GitHub_M",
						"url": "https://github.com/crossbeam-rs/crossbeam/pull/533"
					},
					{
						"source": "GitHub_M",
						"url": "https://github.com/crossbeam-rs/crossbeam/security/advisories/GHSA-v5m7-53cv-f3hx"
					}
				]
			}
		}
	],
	"data_source": "mitre-v5"
}
