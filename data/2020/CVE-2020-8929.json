{
	"id": "CVE-2020-8929",
	"vulnerabilities": [
		{
			"content": {
				"id": "CVE-2020-8929",
				"title": "Ciphertext integrity weakness in Tink",
				"description": "A mis-handling of invalid unicode characters in the Java implementation of Tink versions prior to 1.5 allows an attacker to change the ID part of a ciphertext, which result in the creation of a second ciphertext that can decrypt to the same plaintext. This can be a problem with encrypting deterministic AEAD with a single key, and rely on a unique ciphertext-per-plaintext.",
				"severity": [
					{
						"type": "cvss_v31",
						"source": "Google",
						"cvss_v31": {
							"vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
							"base_score": 5.3,
							"base_severity": "MEDIUM",
							"temporal_score": 5.3,
							"temporal_severity": "MEDIUM",
							"environmental_score": 5.3,
							"environmental_severity": "MEDIUM"
						}
					}
				],
				"cwe": [
					{
						"source": "Google",
						"cwe": [
							"CWE-176"
						]
					}
				],
				"references": [
					{
						"source": "CVE",
						"url": "https://github.com/google/tink/commit/93d839a5865b9d950dffdc9d0bc99b71280a8899"
					},
					{
						"source": "CVE",
						"url": "https://github.com/google/tink/security/advisories/GHSA-g5vf-v6wf-7w2r"
					},
					{
						"source": "Google",
						"url": "https://github.com/google/tink/commit/93d839a5865b9d950dffdc9d0bc99b71280a8899"
					},
					{
						"source": "Google",
						"url": "https://github.com/google/tink/security/advisories/GHSA-g5vf-v6wf-7w2r"
					}
				],
				"modified": "2024-08-04T10:12:11.052Z"
			}
		}
	],
	"data_source": "mitre-v5"
}
