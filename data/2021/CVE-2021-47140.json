{
	"id": "CVE-2021-47140",
	"vulnerabilities": [
		{
			"content": {
				"id": "CVE-2021-47140",
				"title": "iommu/amd: Clear DMA ops when switching domain",
				"description": "In the Linux kernel, the following vulnerability has been resolved:\n\niommu/amd: Clear DMA ops when switching domain\n\nSince commit 08a27c1c3ecf (\"iommu: Add support to change default domain\nof an iommu group\") a user can switch a device between IOMMU and direct\nDMA through sysfs. This doesn't work for AMD IOMMU at the moment because\ndev->dma_ops is not cleared when switching from a DMA to an identity\nIOMMU domain. The DMA layer thus attempts to use the dma-iommu ops on an\nidentity domain, causing an oops:\n\n  # echo 0000:00:05.0 > /sys/sys/bus/pci/drivers/e1000e/unbind\n  # echo identity > /sys/bus/pci/devices/0000:00:05.0/iommu_group/type\n  # echo 0000:00:05.0 > /sys/sys/bus/pci/drivers/e1000e/bind\n   ...\n  BUG: kernel NULL pointer dereference, address: 0000000000000028\n   ...\n   Call Trace:\n    iommu_dma_alloc\n    e1000e_setup_tx_resources\n    e1000e_open\n\nSince iommu_change_dev_def_domain() calls probe_finalize() again, clear\nthe dma_ops there like Vt-d does.",
				"references": [
					{
						"source": "CVE",
						"url": "https://git.kernel.org/stable/c/d6177a6556f853785867e2ec6d5b7f4906f0d809"
					},
					{
						"source": "CVE",
						"url": "https://git.kernel.org/stable/c/f3f2cf46291a693eab21adb94171b0128c2a9ec1"
					},
					{
						"source": "Linux",
						"url": "https://git.kernel.org/stable/c/d6177a6556f853785867e2ec6d5b7f4906f0d809"
					},
					{
						"source": "Linux",
						"url": "https://git.kernel.org/stable/c/f3f2cf46291a693eab21adb94171b0128c2a9ec1"
					}
				],
				"published": "2024-03-25T09:07:38.949Z",
				"modified": "2024-11-04T12:00:15.519Z"
			}
		}
	],
	"data_source": {
		"id": "mitre-v5",
		"raws": [
			"vuls-data-raw-mitre-v5/2021/CVE-2021-47140.json"
		]
	}
}
