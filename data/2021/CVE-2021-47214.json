{
	"id": "CVE-2021-47214",
	"vulnerabilities": [
		{
			"id": "CVE-2021-47214",
			"title": "hugetlb, userfaultfd: fix reservation restore on userfaultfd error",
			"description": "In the Linux kernel, the following vulnerability has been resolved:\n\nhugetlb, userfaultfd: fix reservation restore on userfaultfd error\n\nCurrently in the is_continue case in hugetlb_mcopy_atomic_pte(), if we\nbail out using \"goto out_release_unlock;\" in the cases where idx >=\nsize, or !huge_pte_none(), the code will detect that new_pagecache_page\n== false, and so call restore_reserve_on_error().  In this case I see\nrestore_reserve_on_error() delete the reservation, and the following\ncall to remove_inode_hugepages() will increment h->resv_hugepages\ncausing a 100% reproducible leak.\n\nWe should treat the is_continue case similar to adding a page into the\npagecache and set new_pagecache_page to true, to indicate that there is\nno reservation to restore on the error path, and we need not call\nrestore_reserve_on_error().  Rename new_pagecache_page to\npage_in_pagecache to make that clear.",
			"references": [
				{
					"source": "Linux",
					"url": "https://git.kernel.org/stable/c/b5069d44e2fbc4a9093d005b3ef0949add3dd27e"
				},
				{
					"source": "Linux",
					"url": "https://git.kernel.org/stable/c/cc30042df6fcc82ea18acf0dace831503e60a0b7"
				}
			],
			"published": "2024-04-10T19:01:54.543Z",
			"modified": "2024-06-04T17:14:20.656Z"
		}
	],
	"data_source": "mitre-v5"
}
