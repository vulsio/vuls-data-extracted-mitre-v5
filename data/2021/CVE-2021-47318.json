{
	"id": "CVE-2021-47318",
	"vulnerabilities": [
		{
			"content": {
				"id": "CVE-2021-47318",
				"title": "arch_topology: Avoid use-after-free for scale_freq_data",
				"description": "In the Linux kernel, the following vulnerability has been resolved:\n\narch_topology: Avoid use-after-free for scale_freq_data\n\nCurrently topology_scale_freq_tick() (which gets called from\nscheduler_tick()) may end up using a pointer to \"struct\nscale_freq_data\", which was previously cleared by\ntopology_clear_scale_freq_source(), as there is no protection in place\nhere. The users of topology_clear_scale_freq_source() though needs a\nguarantee that the previously cleared scale_freq_data isn't used\nanymore, so they can free the related resources.\n\nSince topology_scale_freq_tick() is called from scheduler tick, we don't\nwant to add locking in there. Use the RCU update mechanism instead\n(which is already used by the scheduler's utilization update path) to\nguarantee race free updates here.\n\nsynchronize_rcu() makes sure that all RCU critical sections that started\nbefore it is called, will finish before it returns. And so the callers\nof topology_clear_scale_freq_source() don't need to worry about their\ncallback getting called anymore.",
				"references": [
					{
						"source": "CVE",
						"url": "https://git.kernel.org/stable/c/83150f5d05f065fb5c12c612f119015cabdcc124"
					},
					{
						"source": "CVE",
						"url": "https://git.kernel.org/stable/c/ccdf7e073170886bc370c613e269de610a794c4a"
					},
					{
						"source": "Linux",
						"url": "https://git.kernel.org/stable/c/83150f5d05f065fb5c12c612f119015cabdcc124"
					},
					{
						"source": "Linux",
						"url": "https://git.kernel.org/stable/c/ccdf7e073170886bc370c613e269de610a794c4a"
					}
				],
				"published": "2024-05-21T14:35:33.884Z",
				"modified": "2024-11-04T12:03:35.743Z"
			}
		}
	],
	"data_source": {
		"id": "mitre-v5",
		"raws": [
			"vuls-data-raw-mitre-v5/2021/CVE-2021-47318.json"
		]
	}
}
