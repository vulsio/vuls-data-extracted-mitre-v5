{
	"id": "CVE-2021-47421",
	"vulnerabilities": [
		{
			"content": {
				"id": "CVE-2021-47421",
				"title": "drm/amdgpu: handle the case of pci_channel_io_frozen only in amdgpu_pci_resume",
				"description": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdgpu: handle the case of pci_channel_io_frozen only in amdgpu_pci_resume\n\nIn current code, when a PCI error state pci_channel_io_normal is detectd,\nit will report PCI_ERS_RESULT_CAN_RECOVER status to PCI driver, and PCI\ndriver will continue the execution of PCI resume callback report_resume by\npci_walk_bridge, and the callback will go into amdgpu_pci_resume\nfinally, where write lock is releasd unconditionally without acquiring\nsuch lock first. In this case, a deadlock will happen when other threads\nstart to acquire the read lock.\n\nTo fix this, add a member in amdgpu_device strucutre to cache\npci_channel_state, and only continue the execution in amdgpu_pci_resume\nwhen it's pci_channel_io_frozen.",
				"references": [
					{
						"source": "CVE",
						"url": "https://git.kernel.org/stable/c/248b061689a40f4fed05252ee2c89f87cf26d7d8"
					},
					{
						"source": "CVE",
						"url": "https://git.kernel.org/stable/c/72e9a1bf9b722628c28092e0c2cd8717edd201dc"
					},
					{
						"source": "Linux",
						"url": "https://git.kernel.org/stable/c/248b061689a40f4fed05252ee2c89f87cf26d7d8"
					},
					{
						"source": "Linux",
						"url": "https://git.kernel.org/stable/c/72e9a1bf9b722628c28092e0c2cd8717edd201dc"
					}
				],
				"published": "2024-05-21T15:04:09.296Z",
				"modified": "2024-08-04T05:39:59.007Z"
			}
		}
	],
	"data_source": "mitre-v5"
}
