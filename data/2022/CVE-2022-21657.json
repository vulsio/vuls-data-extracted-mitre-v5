{
	"id": "CVE-2022-21657",
	"vulnerabilities": [
		{
			"content": {
				"id": "CVE-2022-21657",
				"title": "X.509 Extended Key Usage and Trust Purposes bypass in Envoy",
				"description": "Envoy is an open source edge and service proxy, designed for cloud-native applications. In affected versions Envoy does not restrict the set of certificates it accepts from the peer, either as a TLS client or a TLS server, to only those certificates that contain the necessary extendedKeyUsage (id-kp-serverAuth and id-kp-clientAuth, respectively). This means that a peer may present an e-mail certificate (e.g. id-kp-emailProtection), either as a leaf certificate or as a CA in the chain, and it will be accepted for TLS. This is particularly bad when combined with the issue described in pull request #630, in that it allows a Web PKI CA that is intended only for use with S/MIME, and thus exempted from audit or supervision, to issue TLS certificates that will be accepted by Envoy. As a result Envoy will trust upstream certificates that should not be trusted. There are no known workarounds to this issue. Users are advised to upgrade.",
				"severity": [
					{
						"type": "cvss_v31",
						"source": "GitHub_M",
						"cvss_v31": {
							"vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:N",
							"base_score": 6.8,
							"base_severity": "MEDIUM",
							"temporal_score": 6.8,
							"temporal_severity": "MEDIUM",
							"environmental_score": 6.8,
							"environmental_severity": "MEDIUM"
						}
					}
				],
				"cwe": [
					{
						"source": "GitHub_M",
						"cwe": [
							"CWE-295"
						]
					}
				],
				"references": [
					{
						"source": "GitHub_M",
						"url": "https://github.com/envoyproxy/envoy/pull/630"
					},
					{
						"source": "GitHub_M",
						"url": "https://github.com/envoyproxy/envoy/security/advisories/GHSA-837m-wjrv-vm5g"
					}
				]
			}
		}
	],
	"data_source": "mitre-v5"
}
