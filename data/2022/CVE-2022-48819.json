{
	"id": "CVE-2022-48819",
	"vulnerabilities": [
		{
			"content": {
				"id": "CVE-2022-48819",
				"title": "tcp: take care of mixed splice()/sendmsg(MSG_ZEROCOPY) case",
				"description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntcp: take care of mixed splice()/sendmsg(MSG_ZEROCOPY) case\n\nsyzbot found that mixing sendpage() and sendmsg(MSG_ZEROCOPY)\ncalls over the same TCP socket would again trigger the\ninfamous warning in inet_sock_destruct()\n\n\tWARN_ON(sk_forward_alloc_get(sk));\n\nWhile Talal took into account a mix of regular copied data\nand MSG_ZEROCOPY one in the same skb, the sendpage() path\nhas been forgotten.\n\nWe want the charging to happen for sendpage(), because\npages could be coming from a pipe. What is missing is the\ndowngrading of pure zerocopy status to make sure\nsk_forward_alloc will stay synced.\n\nAdd tcp_downgrade_zcopy_pure() helper so that we can\nuse it from the two callers.",
				"references": [
					{
						"source": "CVE",
						"url": "https://git.kernel.org/stable/c/47f3860c4931175f112f28dcac66eacca9b1040f"
					},
					{
						"source": "CVE",
						"url": "https://git.kernel.org/stable/c/f8d9d938514f46c4892aff6bfe32f425e84d81cc"
					},
					{
						"source": "Linux",
						"url": "https://git.kernel.org/stable/c/47f3860c4931175f112f28dcac66eacca9b1040f"
					},
					{
						"source": "Linux",
						"url": "https://git.kernel.org/stable/c/f8d9d938514f46c4892aff6bfe32f425e84d81cc"
					}
				],
				"published": "2024-07-16T11:44:06.619Z",
				"modified": "2024-08-03T15:25:01.635Z"
			}
		}
	],
	"data_source": "mitre-v5"
}
