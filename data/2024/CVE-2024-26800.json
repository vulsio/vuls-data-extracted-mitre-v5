{
	"id": "CVE-2024-26800",
	"vulnerabilities": [
		{
			"content": {
				"id": "CVE-2024-26800",
				"title": "tls: fix use-after-free on failed backlog decryption",
				"description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntls: fix use-after-free on failed backlog decryption\n\nWhen the decrypt request goes to the backlog and crypto_aead_decrypt\nreturns -EBUSY, tls_do_decryption will wait until all async\ndecryptions have completed. If one of them fails, tls_do_decryption\nwill return -EBADMSG and tls_decrypt_sg jumps to the error path,\nreleasing all the pages. But the pages have been passed to the async\ncallback, and have already been released by tls_decrypt_done.\n\nThe only true async case is when crypto_aead_decrypt returns\n -EINPROGRESS. With -EBUSY, we already waited so we can tell\ntls_sw_recvmsg that the data is available for immediate copy, but we\nneed to notify tls_decrypt_sg (via the new ->async_done flag) that the\nmemory has already been released.",
				"references": [
					{
						"source": "Linux",
						"url": "https://git.kernel.org/stable/c/13114dc5543069f7b97991e3b79937b6da05f5b0"
					},
					{
						"source": "Linux",
						"url": "https://git.kernel.org/stable/c/1ac9fb84bc7ecd4bc6428118301d9d864d2a58d1"
					},
					{
						"source": "Linux",
						"url": "https://git.kernel.org/stable/c/81be85353b0f5a7b660635634b655329b429eefe"
					},
					{
						"source": "Linux",
						"url": "https://git.kernel.org/stable/c/f2b85a4cc763841843de693bbd7308fe9a2c4c89"
					}
				],
				"published": "2024-04-04T08:20:28.554Z",
				"modified": "2024-05-29T05:23:00.056Z"
			}
		}
	],
	"data_source": "mitre-v5"
}
