{
	"id": "CVE-2024-35827",
	"vulnerabilities": [
		{
			"content": {
				"id": "CVE-2024-35827",
				"title": "io_uring/net: fix overflow check in io_recvmsg_mshot_prep()",
				"description": "In the Linux kernel, the following vulnerability has been resolved:\n\nio_uring/net: fix overflow check in io_recvmsg_mshot_prep()\n\nThe \"controllen\" variable is type size_t (unsigned long).  Casting it\nto int could lead to an integer underflow.\n\nThe check_add_overflow() function considers the type of the destination\nwhich is type int.  If we add two positive values and the result cannot\nfit in an integer then that's counted as an overflow.\n\nHowever, if we cast \"controllen\" to an int and it turns negative, then\nnegative values *can* fit into an int type so there is no overflow.\n\nGood: 100 + (unsigned long)-4 = 96  <-- overflow\n Bad: 100 + (int)-4 = 96 <-- no overflow\n\nI deleted the cast of the sizeof() as well.  That's not a bug but the\ncast is unnecessary.",
				"references": [
					{
						"source": "Linux",
						"url": "https://git.kernel.org/stable/c/0c8c74bb59e7d77554016efc34c2d10376985e5e"
					},
					{
						"source": "Linux",
						"url": "https://git.kernel.org/stable/c/59a534690ecc3af72c6ab121aeac1237a4adae66"
					},
					{
						"source": "Linux",
						"url": "https://git.kernel.org/stable/c/868ec868616438df487b9e2baa5a99f8662cc47c"
					},
					{
						"source": "Linux",
						"url": "https://git.kernel.org/stable/c/8ede3db5061bb1fe28e2c9683329aafa89d2b1b4"
					},
					{
						"source": "Linux",
						"url": "https://git.kernel.org/stable/c/b6563ad0d599110bd5cf8f56c47d279c3ed796fe"
					}
				],
				"published": "2024-05-17T13:41:09.193Z",
				"modified": "2024-06-04T17:34:28.876Z"
			}
		}
	],
	"data_source": "mitre-v5"
}
