{
	"id": "CVE-2024-35985",
	"vulnerabilities": [
		{
			"content": {
				"id": "CVE-2024-35985",
				"title": "sched/eevdf: Prevent vlag from going out of bounds in reweight_eevdf()",
				"description": "In the Linux kernel, the following vulnerability has been resolved:\n\nsched/eevdf: Prevent vlag from going out of bounds in reweight_eevdf()\n\nIt was possible to have pick_eevdf() return NULL, which then causes a\nNULL-deref. This turned out to be due to entity_eligible() returning\nfalsely negative because of a s64 multiplcation overflow.\n\nSpecifically, reweight_eevdf() computes the vlag without considering\nthe limit placed upon vlag as update_entity_lag() does, and then the\nscaling multiplication (remember that weight is 20bit fixed point) can\noverflow. This then leads to the new vruntime being weird which then\ncauses the above entity_eligible() to go side-ways and claim nothing\nis eligible.\n\nThus limit the range of vlag accordingly.\n\nAll this was quite rare, but fatal when it does happen.",
				"references": [
					{
						"source": "CVE",
						"url": "https://git.kernel.org/stable/c/06f27e6d7bf0abf54488259ef36bbf0e1fccb35c"
					},
					{
						"source": "CVE",
						"url": "https://git.kernel.org/stable/c/1560d1f6eb6b398bddd80c16676776c0325fe5fe"
					},
					{
						"source": "CVE",
						"url": "https://git.kernel.org/stable/c/470d347b14b0ecffa9b39cf8f644fa2351db3efb"
					},
					{
						"source": "Linux",
						"url": "https://git.kernel.org/stable/c/06f27e6d7bf0abf54488259ef36bbf0e1fccb35c"
					},
					{
						"source": "Linux",
						"url": "https://git.kernel.org/stable/c/1560d1f6eb6b398bddd80c16676776c0325fe5fe"
					},
					{
						"source": "Linux",
						"url": "https://git.kernel.org/stable/c/470d347b14b0ecffa9b39cf8f644fa2351db3efb"
					}
				],
				"published": "2024-05-20T09:47:52.389Z",
				"modified": "2024-08-02T03:30:11.561Z"
			}
		}
	],
	"data_source": "mitre-v5"
}
