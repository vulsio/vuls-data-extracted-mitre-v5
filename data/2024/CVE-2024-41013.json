{
	"id": "CVE-2024-41013",
	"vulnerabilities": [
		{
			"content": {
				"id": "CVE-2024-41013",
				"title": "xfs: don't walk off the end of a directory data block",
				"description": "In the Linux kernel, the following vulnerability has been resolved:\n\nxfs: don't walk off the end of a directory data block\n\nThis adds sanity checks for xfs_dir2_data_unused and xfs_dir2_data_entry\nto make sure don't stray beyond valid memory region. Before patching, the\nloop simply checks that the start offset of the dup and dep is within the\nrange. So in a crafted image, if last entry is xfs_dir2_data_unused, we\ncan change dup->length to dup->length-1 and leave 1 byte of space. In the\nnext traversal, this space will be considered as dup or dep. We may\nencounter an out of bound read when accessing the fixed members.\n\nIn the patch, we make sure that the remaining bytes large enough to hold\nan unused entry before accessing xfs_dir2_data_unused and\nxfs_dir2_data_unused is XFS_DIR2_DATA_ALIGN byte aligned. We also make\nsure that the remaining bytes large enough to hold a dirent with a\nsingle-byte name before accessing xfs_dir2_data_entry.",
				"references": [
					{
						"source": "CVE",
						"url": "https://git.kernel.org/stable/c/0c7fcdb6d06cdf8b19b57c17605215b06afa864a"
					},
					{
						"source": "Linux",
						"url": "https://git.kernel.org/stable/c/0c7fcdb6d06cdf8b19b57c17605215b06afa864a"
					}
				],
				"published": "2024-07-29T06:36:59.93Z",
				"modified": "2024-12-19T09:10:03.831Z"
			}
		}
	],
	"data_source": {
		"id": "mitre-v5",
		"raws": [
			"vuls-data-raw-mitre-v5/2024/CVE-2024-41013.json"
		]
	}
}
