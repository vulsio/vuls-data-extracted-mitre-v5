{
	"id": "CVE-2024-42293",
	"vulnerabilities": [
		{
			"content": {
				"id": "CVE-2024-42293",
				"title": "arm64: mm: Fix lockless walks with static and dynamic page-table folding",
				"description": "In the Linux kernel, the following vulnerability has been resolved:\n\narm64: mm: Fix lockless walks with static and dynamic page-table folding\n\nLina reports random oopsen originating from the fast GUP code when\n16K pages are used with 4-level page-tables, the fourth level being\nfolded at runtime due to lack of LPA2.\n\nIn this configuration, the generic implementation of\np4d_offset_lockless() will return a 'p4d_t *' corresponding to the\n'pgd_t' allocated on the stack of the caller, gup_fast_pgd_range().\nThis is normally fine, but when the fourth level of page-table is folded\nat runtime, pud_offset_lockless() will offset from the address of the\n'p4d_t' to calculate the address of the PUD in the same page-table page.\nThis results in a stray stack read when the 'p4d_t' has been allocated\non the stack and can send the walker into the weeds.\n\nFix the problem by providing our own definition of p4d_offset_lockless()\nwhen CONFIG_PGTABLE_LEVELS <= 4 which returns the real page-table\npointer rather than the address of the local stack variable.",
				"references": [
					{
						"source": "Linux",
						"url": "https://git.kernel.org/stable/c/36639013b3462c06ff8e3400a427f775b4fc97f5"
					},
					{
						"source": "Linux",
						"url": "https://git.kernel.org/stable/c/78672d49d3eebbcda3589f4d6e589caf357c5a59"
					}
				],
				"published": "2024-08-17T09:09:02.303Z",
				"modified": "2024-09-15T17:53:00.918Z"
			}
		}
	],
	"data_source": {
		"id": "mitre-v5",
		"raws": [
			"vuls-data-raw-mitre-v5/2024/CVE-2024-42293.json"
		]
	}
}
