{
	"id": "CVE-2024-44950",
	"vulnerabilities": [
		{
			"content": {
				"id": "CVE-2024-44950",
				"title": "serial: sc16is7xx: fix invalid FIFO access with special register set",
				"description": "In the Linux kernel, the following vulnerability has been resolved:\n\nserial: sc16is7xx: fix invalid FIFO access with special register set\n\nWhen enabling access to the special register set, Receiver time-out and\nRHR interrupts can happen. In this case, the IRQ handler will try to read\nfrom the FIFO thru the RHR register at address 0x00, but address 0x00 is\nmapped to DLL register, resulting in erroneous FIFO reading.\n\nCall graph example:\n    sc16is7xx_startup(): entry\n    sc16is7xx_ms_proc(): entry\n    sc16is7xx_set_termios(): entry\n    sc16is7xx_set_baud(): DLH/DLL = $009C --> access special register set\n    sc16is7xx_port_irq() entry            --> IIR is 0x0C\n    sc16is7xx_handle_rx() entry\n    sc16is7xx_fifo_read(): --> unable to access FIFO (RHR) because it is\n                               mapped to DLL (LCR=LCR_CONF_MODE_A)\n    sc16is7xx_set_baud(): exit --> Restore access to general register set\n\nFix the problem by claiming the efr_lock mutex when accessing the Special\nregister set.",
				"references": [
					{
						"source": "Linux",
						"url": "https://git.kernel.org/stable/c/6a6730812220a9a5ce4003eb347da1ee5abd06b0"
					},
					{
						"source": "Linux",
						"url": "https://git.kernel.org/stable/c/7d3b793faaab1305994ce568b59d61927235f57b"
					},
					{
						"source": "Linux",
						"url": "https://git.kernel.org/stable/c/cc6a3f35bc9b3a8da1b195420a2e8d9fdadfa831"
					},
					{
						"source": "Linux",
						"url": "https://git.kernel.org/stable/c/dc5ead0e8fc5ef53b8553394d4aab60c277976b3"
					}
				],
				"published": "2024-09-04T18:35:50.602Z",
				"modified": "2024-12-19T09:18:59.037Z"
			}
		}
	],
	"data_source": {
		"id": "mitre-v5",
		"raws": [
			"vuls-data-raw-mitre-v5/2024/CVE-2024-44950.json"
		]
	}
}
