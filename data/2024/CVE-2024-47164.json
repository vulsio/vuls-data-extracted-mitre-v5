{
	"id": "CVE-2024-47164",
	"vulnerabilities": [
		{
			"content": {
				"id": "CVE-2024-47164",
				"title": "The `is_in_or_equal` function may be bypassed in Gradio",
				"description": "Gradio is an open-source Python package designed for quick prototyping. This vulnerability relates to the **bypass of directory traversal checks** within the `is_in_or_equal` function. This function, intended to check if a file resides within a given directory, can be bypassed with certain payloads that manipulate file paths using `..` (parent directory) sequences. Attackers could potentially access restricted files if they are able to exploit this flaw, although the difficulty is high. This primarily impacts users relying on Gradioâ€™s blocklist or directory access validation, particularly when handling file uploads. Users are advised to upgrade to `gradio>=5.0` to address this issue. As a workaround, users can manually sanitize and normalize file paths in their Gradio deployment before passing them to the `is_in_or_equal` function. Ensuring that all file paths are properly resolved and absolute can help mitigate the bypass vulnerabilities caused by the improper handling of `..` sequences or malformed paths.",
				"severity": [
					{
						"type": "cvss_v40",
						"source": "GitHub_M",
						"cvss_v40": {
							"vector": "CVSS:4.0/AV:N/AC:H/AT:P/PR:L/UI:N/VC:L/VI:N/VA:N/SC:N/SI:N/SA:N",
							"score": 2.3,
							"severity": "LOW"
						}
					}
				],
				"cwe": [
					{
						"source": "GitHub_M",
						"cwe": [
							"CWE-22"
						]
					}
				],
				"references": [
					{
						"source": "GitHub_M",
						"url": "https://github.com/gradio-app/gradio/security/advisories/GHSA-77xq-6g77-h274"
					}
				],
				"published": "2024-10-10T21:52:27.377Z",
				"modified": "2024-10-11T15:24:48.863Z"
			}
		}
	],
	"data_source": {
		"id": "mitre-v5",
		"raws": [
			"vuls-data-raw-mitre-v5/2024/CVE-2024-47164.json"
		]
	}
}
