{
	"id": "CVE-2024-57881",
	"vulnerabilities": [
		{
			"content": {
				"id": "CVE-2024-57881",
				"title": "mm/page_alloc: don't call pfn_to_page() on possibly non-existent PFN in split_large_buddy()",
				"description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm/page_alloc: don't call pfn_to_page() on possibly non-existent PFN in split_large_buddy()\n\nIn split_large_buddy(), we might call pfn_to_page() on a PFN that might\nnot exist.  In corner cases, such as when freeing the highest pageblock in\nthe last memory section, this could result with CONFIG_SPARSEMEM &&\n!CONFIG_SPARSEMEM_EXTREME in __pfn_to_section() returning NULL and and\n__section_mem_map_addr() dereferencing that NULL pointer.\n\nLet's fix it, and avoid doing a pfn_to_page() call for the first\niteration, where we already have the page.\n\nSo far this was found by code inspection, but let's just CC stable as the\nfix is easy.",
				"references": [
					{
						"source": "Linux",
						"url": "https://git.kernel.org/stable/c/4234ca9884bcae9e48ed38652d91696ad5cd591d"
					},
					{
						"source": "Linux",
						"url": "https://git.kernel.org/stable/c/faeec8e23c10bd30e8aa759a2eb3018dae00f924"
					}
				],
				"published": "2025-01-11T15:10:43.786Z",
				"modified": "2025-01-11T15:10:43.786Z"
			}
		}
	],
	"data_source": {
		"id": "mitre-v5",
		"raws": [
			"vuls-data-raw-mitre-v5/2024/CVE-2024-57881.json"
		]
	}
}
